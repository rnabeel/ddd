**Overview of Implementation and Issues**

### Implementation:
1. **Wrapper Creation:**
   - Developed a wrapper in GoLang that imports the `exchangeHttpClient` as a dependency.
   - This enables the use of `exchangeHttpClient` functions to communicate with the Exchange API.

2. **Credentials Configuration:**
   - Added Exchange-provided credentials to the environment variables.
   - Used these credentials in the `main.go` file to construct the `exchangeClientConfig`.

3. **API Requests:**
   - Constructed the Exchange client object using the environment variables.
   - Used the `exchangeHttpClient`'s `Get` method to send requests to the Exchange.

### Observations:
There are two cases encountered while making API requests:

#### Case 1:
- **Base URL & Credentials:** Used non-production `base_url` and non-production credentials.
- **Outcome:** The OAuth request is successfully executed by the `exchangeHttpClient`, and an OAuth token is generated. However, when attempting to make a request to the non-production gateway (`/private/1723/credit-card/health` on the QA gateway), the request is rejected with a **403 Forbidden** error.

#### Case 2:
- **Base URL & Credentials:** Used production `base_url` with non-production credentials.
- **Outcome:** The `exchangeHttpClient` returns an **invalid credentials** error. The OAuth token cannot be generated, resulting in the `/private/1723/credit-card/health` request being uncallable.

### Blocker:
- The current setup includes only non-production access credentials for the Exchange, which are incompatible with production Exchange APIs.
- The only API available in the Exchange is the `product-delivery-api`, which is configured to the production gateway and cannot be redirected to the non-production gateway due to certain constraints.

### Resolution Needed:
- Access to a non-production Exchange API is required. This would allow the wrapper to successfully route requests through the `exchangeHttpClient` to the Exchange.

